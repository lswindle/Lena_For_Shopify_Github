(()=>{var e={845:e=>{self,e.exports=(()=>{"use strict";var e={};return((e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isArmadaLoaded=void 0,t.isArmadaLoaded=e=>{var t,r;const o=!0===(null===(r=null===(t=window.eight)||void 0===t?void 0:t.armada)||void 0===r?void 0:r.loaded);if(!e)return o;o?e():document.addEventListener("ARMADA:LOADED",e)},t.default=t.isArmadaLoaded})(0,e),e})()}},t={};function r(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=r(845);class t extends HTMLElement{constructor(){super(),this.observerOptions={root:null,rootMargin:"0px",threshold:.25},this.observer=new IntersectionObserver(((e,t)=>this.observerCallback(e,t)),this.observerOptions)}connectedCallback(){this.observer.observe(this),(0,e.isArmadaLoaded)(this.init.bind(this))}disconnectedCallback(){this.observer.unobserve(this)}init(){window.eight.armada.elementRegistry.register({key:"zoomout-animation",assetPath:"/assets/engine-zoomout-animation.min.js"})}observerCallback(e,t){e[0].isIntersecting&&(this.setAttribute("data-zoomout-animated",`${e[0].isIntersecting}`),this.observer.unobserve(this))}}window.customElements.define("zoomout-animation",t)})()})();